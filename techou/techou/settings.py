"""
Django settings for techou project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from datetime import timedelta
from dotenv import load_dotenv
load_dotenv('/home/yamato/techou/.env')

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.getenv("SOCIAL_AUTH_GOOGLE_OAUTH2_KEY")
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.getenv("SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET")

SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/calendar',
    'https://www.googleapis.com/auth/userinfo.email'
]

SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI = "https://hougakkan.site/accounts/complete/google-oauth2/"


# Build paths inside the project like this: BASE_DIR / 'subdir'.

BASE_DIR = Path(__file__).resolve().parent.parent

GOOGLE_CLIENT_SECRETS_FILE = os.path.join(BASE_DIR, 'credentials.json')
GOOGLE_API_SCOPES = ['https://www.googleapis.com/auth/calendar']
REDIRECT_URI = 'http://localhost:8000/google-calendar/redirect/'  # 開
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-w+*g7#*_#m@+$ff1kl$spr&b1kzqss8owlk#-syss*r7%y-)%^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#ALLOWED_HOSTS = []
ALLOWED_HOSTS = ["127.0.0.1", "localhost", "1.0.0.127.in-addr.arpa", "*"]


AUTH_USER_MODEL = 'gstechou.CustomUser'
# Application definition

AUTHENTICATION_BACKENDS = [
    'social_core.backends.google.GoogleOAuth2',
    'gstechou.authentication.EmailAuthBackend',  # 🔹 カスタム認証を適用
    'django.contrib.auth.backends.ModelBackend',  # Django のデフォルト認証も残す
]

LOGIN_REDIRECT_URL = "/mypage/"
LOGOUT_REDIRECT_URL = "/accounts/login/"



INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'gstechou',
    'debug_toolbar',
    'django_extensions',
    'rest_framework',  # Django REST Framework
    'rest_framework_simplejwt',
    'social_django',  # JWT認証,
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',  # 🔹 これがないとブラウザでログインしてもAPIで認証されない
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    )
}

ROOT_URLCONF = 'techou.urls'

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "file": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": "debug.log",  # ログファイルを作成
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file"],
            "level": "DEBUG",
            "propagate": True,
        },
    },
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=1),  # アクセストークンの有効期限
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),  # リフレッシュトークンの有効期限
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,  # JWT の署名キー
    "AUTH_HEADER_TYPES": ("Bearer",),  # Authorization: Bearer <token> の形式を指定
}

LOGIN_URL = "/accounts/login/"  # ログインページのURLを設定


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'techou.wsgi.application'

INTERNAL_IPS = ['127.0.0.1',]

# settings.py

# セッションエンジンが正しいか確認
SESSION_ENGINE = 'django.contrib.sessions.backends.db'

# セッションクッキーの有効期限
SESSION_COOKIE_AGE = 1209600  # 2週間

SESSION_COOKIE_SECURE = False  # 本番環境では必ず True に設定

SESSION_COOKIE_HTTPONLY = True

SESSION_COOKIE_SAMESITE = 'Lax'  # クッキーの制限を緩和

# セッションがブラウザを閉じても維持されるか
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

# セッションの保存を強制する
SESSION_SAVE_EVERY_REQUEST = True

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
     'default': {
        'ENGINE': 'django.db.backends.mysql',  # MariaDBでもMySQLエンジンを使います
        'NAME': 'gstechou_db',  # 作成したデータベース名
        'USER': 'hiroki',  # 作成したユーザー名
        'PASSWORD': 'tanaka',  # ユーザーパスワード
        'HOST': 'localhost',  # 通常ローカルホスト
        'PORT': '3306',  # MariaDB/MySQLのデフォルトポート
    }
}

LOGIN_REDIRECT_URL = "/study-plan-form/"  # 🔹 ログイン成功後にリダイレクトするページ
LOGOUT_REDIRECT_URL = "/accounts/login/"  # 🔹 ログアウト後にログインページへ


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
