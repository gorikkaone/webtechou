# Generated by Django 4.2.19 on 2025-02-20 08:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('parent_name', models.CharField(default='未設定', max_length=100, verbose_name='保護者氏名')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='子どもの名前')),
                ('entrance_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='受験学年（西暦）')),
                ('google_calendar_id', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='学校名')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='住所')),
                ('school_type', models.CharField(choices=[('私立', '私立'), ('国立', '国立')], max_length=10, verbose_name='学校種別')),
                ('prefecture', models.CharField(choices=[('北海道', '北海道'), ('青森県', '青森県'), ('岩手県', '岩手県'), ('宮城県', '宮城県'), ('秋田県', '秋田県'), ('山形県', '山形県'), ('福島県', '福島県'), ('茨城県', '茨城県'), ('栃木県', '栃木県'), ('群馬県', '群馬県'), ('埼玉県', '埼玉県'), ('千葉県', '千葉県'), ('東京都', '東京都'), ('神奈川県', '神奈川県'), ('新潟県', '新潟県'), ('富山県', '富山県'), ('石川県', '石川県'), ('福井県', '福井県'), ('山梨県', '山梨県'), ('長野県', '長野県'), ('岐阜県', '岐阜県'), ('静岡県', '静岡県'), ('愛知県', '愛知県'), ('三重県', '三重県'), ('滋賀県', '滋賀県'), ('京都府', '京都府'), ('大阪府', '大阪府'), ('兵庫県', '兵庫県'), ('奈良県', '奈良県'), ('和歌山県', '和歌山県'), ('鳥取県', '鳥取県'), ('島根県', '島根県'), ('岡山県', '岡山県'), ('広島県', '広島県'), ('山口県', '山口県'), ('徳島県', '徳島県'), ('香川県', '香川県'), ('愛媛県', '愛媛県'), ('高知県', '高知県'), ('福岡県', '福岡県'), ('佐賀県', '佐賀県'), ('長崎県', '長崎県'), ('熊本県', '熊本県'), ('大分県', '大分県'), ('宮崎県', '宮崎県'), ('鹿児島県', '鹿児島県'), ('沖縄県', '沖縄県')], default='不明', max_length=10, verbose_name='都道府県')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='教科名')),
            ],
        ),
        migrations.CreateModel(
            name='StudyRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='日付')),
                ('content', models.TextField(verbose_name='学習内容')),
                ('result', models.CharField(max_length=255, verbose_name='成果')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='感想')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_records', to='gstechou.child', verbose_name='子ども')),
            ],
            options={
                'verbose_name': '学習記録',
                'verbose_name_plural': '学習記録一覧',
            },
        ),
        migrations.CreateModel(
            name='StudyPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_content', models.TextField()),
                ('quantity', models.CharField(max_length=50)),
                ('estimated_time', models.CharField(max_length=20, verbose_name='予想時間')),
                ('priority', models.CharField(choices=[('A', '絶対やる'), ('B', 'できればやる'), ('C', 'やらなくてもよい')], max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('child', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='study_plans', to='gstechou.child')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gstechou.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Shiboukou',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='学校名')),
                ('rank', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], max_length=1, verbose_name='志望ランク')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shiboukou_list', to='gstechou.child')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shiboukou_entries', to='gstechou.school')),
            ],
            options={
                'unique_together': {('child', 'school')},
            },
        ),
        migrations.CreateModel(
            name='PastExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_date', models.DateField(verbose_name='試験日')),
                ('score', models.IntegerField(verbose_name='得点')),
                ('year', models.IntegerField(verbose_name='年度')),
                ('attempt', models.IntegerField(verbose_name='回数')),
                ('exam_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='入試の分類')),
                ('math_score', models.IntegerField(verbose_name='算数')),
                ('japanese_score', models.IntegerField(verbose_name='国語')),
                ('science_score', models.IntegerField(verbose_name='理科')),
                ('social_studies_score', models.IntegerField(verbose_name='社会')),
                ('total_score', models.IntegerField(blank=True, null=True, verbose_name='合計')),
                ('remarks', models.TextField(blank=True, verbose_name='特記事項')),
                ('child', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='past_exams', to='gstechou.child')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gstechou.shiboukou', verbose_name='志望校')),
            ],
            options={
                'verbose_name': '過去問記録',
                'verbose_name_plural': '過去問記録一覧',
            },
        ),
        migrations.CreateModel(
            name='ExamSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_date', models.DateField()),
                ('session', models.CharField(choices=[('午前', '午前'), ('午後', '午後')], max_length=10)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('exam_name', models.CharField(max_length=255)),
                ('subject_count', models.CharField(choices=[('4教科', '4教科'), ('2教科', '2教科'), ('単科', '単科'), ('その他', 'その他')], max_length=10)),
                ('probability_level', models.CharField(choices=[('挑戦校', '挑戦校'), ('実力相応校', '実力相応校'), ('安全校', '安全校')], max_length=10)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gstechou.child')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gstechou.school')),
            ],
        ),
        migrations.CreateModel(
            name='ExamRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=255, verbose_name='試験名')),
                ('exam_date', models.DateField(verbose_name='実施日')),
                ('math_score', models.IntegerField(blank=True, null=True, verbose_name='算数 得点')),
                ('math_deviation', models.FloatField(blank=True, null=True, verbose_name='算数 偏差値')),
                ('japanese_score', models.IntegerField(blank=True, null=True, verbose_name='国語 得点')),
                ('japanese_deviation', models.FloatField(blank=True, null=True, verbose_name='国語 偏差値')),
                ('science_score', models.IntegerField(blank=True, null=True, verbose_name='理科 得点')),
                ('science_deviation', models.FloatField(blank=True, null=True, verbose_name='理科 偏差値')),
                ('social_studies_score', models.IntegerField(blank=True, null=True, verbose_name='社会 得点')),
                ('social_studies_deviation', models.FloatField(blank=True, null=True, verbose_name='社会 偏差値')),
                ('total_score', models.IntegerField(blank=True, editable=False, null=True, verbose_name='合計 得点')),
                ('total_deviation', models.FloatField(blank=True, null=True, verbose_name='合計 偏差値')),
                ('pass_probability1', models.CharField(blank=True, choices=[('80+', '80%以上'), ('80-60', '80〜60%'), ('60-40', '60〜40%'), ('40-20', '40〜20%'), ('20-', '20%未満')], max_length=10, null=True, verbose_name='志望校1の合格可能性')),
                ('pass_probability2', models.CharField(blank=True, choices=[('80+', '80%以上'), ('80-60', '80〜60%'), ('60-40', '60〜40%'), ('40-20', '40〜20%'), ('20-', '20%未満')], max_length=10, null=True, verbose_name='志望校2の合格可能性')),
                ('pass_probability3', models.CharField(blank=True, choices=[('80+', '80%以上'), ('80-60', '80〜60%'), ('60-40', '60〜40%'), ('40-20', '40〜20%'), ('20-', '20%未満')], max_length=10, null=True, verbose_name='志望校3の合格可能性')),
                ('pass_probability4', models.CharField(blank=True, choices=[('80+', '80%以上'), ('80-60', '80〜60%'), ('60-40', '60〜40%'), ('40-20', '40〜20%'), ('20-', '20%未満')], max_length=10, null=True, verbose_name='志望校4の合格可能性')),
                ('pass_probability5', models.CharField(blank=True, choices=[('80+', '80%以上'), ('80-60', '80〜60%'), ('60-40', '60〜40%'), ('40-20', '40〜20%'), ('20-', '20%未満')], max_length=10, null=True, verbose_name='志望校5の合格可能性')),
                ('result_notes', models.TextField(blank=True, null=True, verbose_name='結果について')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_records', to='gstechou.child', verbose_name='受験生')),
                ('school1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='school1', to='gstechou.shiboukou', verbose_name='志望校1')),
                ('school2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='school2', to='gstechou.shiboukou', verbose_name='志望校2')),
                ('school3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='school3', to='gstechou.shiboukou', verbose_name='志望校3')),
                ('school4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='school4', to='gstechou.shiboukou', verbose_name='志望校4')),
                ('school5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='school5', to='gstechou.shiboukou', verbose_name='志望校5')),
            ],
        ),
    ]
